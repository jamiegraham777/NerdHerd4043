package org.usfirst.frc.team4043.robot;


import edu.wpi.first.wpilibj.SampleRobot;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.buttons.*;

/**
 * This is a demo program showing the use of the RobotDrive class, specifically it 
 * contains the code necessary to operate a robot with tank drive.
 *
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the SampleRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 *
 * WARNING: While it may look like a good choice to use for your code if you're inexperienced,
 * don't. Unless you know what you are doing, complex code will be much more difficult under
 * this system. Use IterativeRobot or Command-Based instead if you're new.
 */
public class Robot extends SampleRobot {
	CANTalon one, two, three, four;
    RobotDrive myRobot;  // class that handles basic drive operations
    Joystick xbox;  // set to ID 1 in DriverStation
    
    public Robot() {
    	one = new CANTalon(0);
    	two = new CANTalon(1);
    	three = new CANTalon(2);
    	four = new CANTalon(3); 
        myRobot = new RobotDrive(one,two);
        myRobot.setExpiration(0.1);
        xbox = new Joystick(0);
    }    
    /**
     * Runs the motors with tank steering.
     */
    public void operatorControl() {
        myRobot.setSafetyEnabled(true);
        /*
        while (isOperatorControl() && isEnabled()) {
        	if (xbox.getRawButton(5)) {
        	three.enableLimitSwitch(true,true);
        	four.enableLimitSwitch(true,true);
        	}
        	else if(xbox.getRawButton(6)) {
        		three.set(-1);
        		four.set(-1);
        	}
        	else {
        	three.set(0);
        	four.set(0);
        	}
        		*/
      
        	myRobot.tankDrive(-xbox.getRawAxis(1)/1.5, -xbox.getRawAxis(5)/1.5);
            Timer.delay(0.005);		// wait for a motor update time      
}
    
    
    
    public void autonomous() {
    	myRobot.setSafetyEnabled(true);
    	
    	while(isEnabled()==true){
    		
        myRobot.tankDrive(-.5, -.5);	// drive forwards half speed
        Timer.delay(2.0);		//    for 2 seconds
        
    }
    	myRobot.drive(0.0, 0.0);	// stop robot
    }
    
}
